#!/usr/bin/env node

//#Sketchplate
//##by [Kyle Phillips](http://hapticdata.com)
require('colors');

var program = require('commander'),
	async = require('async'),
	path = require('path'),
	fs = require('fs'),
	sketchplate = require('../lib/sketchplate'),
	hooks = require('../lib/hooks'),
	spawn = require('child_process').spawn,
	configLocation,
	version = require('../package').version,
	config = require('../lib/config').getUserConfig();


//handle the `new` command
program
	.version(version)
	.usage('<command> [options]');

program.on('--help', function(){
	var l = console.log;
	l();
	l('  Sketchplate'.blue+' commands ('.blue+'v'+version+''+'):'.blue );
	l();
	l('    config'.cyan+' [options] [command]');
	l('    alter your configurations for editor and templates');
	l();
	l('    fetch'.cyan+' [options] [namesâ€¦]');
	l('    perform resource fetches on your templates');
	l();
	l('    hooks'.cyan+' [options] [command]');
	l('    apply common operations on existing projects');
	l('');
	l('    new'.cyan+' [options] <location>');
	l('    create a new project at <location> with hooks for [options]');
	l();
	l('    template'.cyan+' [options] [command]');
	l('    set default, create, edit your sketchplate templates');
	l();
	process.exit();
});

program.parse(process.argv);

// args void of cmd
var args = process.argv.slice(3);

// command
var cmd = program.args[0];
// display help
if (!cmd) {
	process.stdout.write(program.helpInformation());
	program.emit('--help');
	process.exit();
}

var commands = {
	fetch: function(){
		spwn( cmd );
		/*cmd = 'template';
		args.unshift('fetch');
		spwn( cmd );*/
	},
	template: function(){
		spwn( cmd );
	},
	config: function(){
		spwn( cmd );
	},
	hooks: function(){
		spwn( cmd );
	}
};
commands['new'] = function(){
	spwn(cmd);
};

if( commands[cmd] ){
	commands[cmd]();
}

function spwn( cmd ){
	// executable
	var bin = 'sketchplate-' + cmd + '.js';
	// local
	var local = path.join(__dirname, bin);
	if (fs.existsSync(local)) bin = local;
    //add the file to launch to the beginning of the args
    //launch with "node sketchplate-{{cmd}}.js"
    args.unshift(bin);
	// spawn
	var proc = spawn('node', args, { stdio: 'inherit', customFds: [0,1,2] });
}
